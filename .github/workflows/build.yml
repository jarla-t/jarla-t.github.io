name: Build and Deploy Site with Google Drive Images

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: pip install google-api-python-client google-auth-httplib2 google-auth-oauthlib

      - name: Save Google credentials
        run: echo '${{ secrets.GOOGLE_SERVICE_KEY }}' > gdrive_creds.json

      - name: Download images from Google Drive
        run: |
          python - <<'EOF'
          from google.oauth2 import service_account
          from googleapiclient.discovery import build
          import googleapiclient.http
          import os

          creds = service_account.Credentials.from_service_account_file('gdrive_creds.json')
          drive_service = build('drive', 'v3', credentials=creds)

          FOLDER_ID = '18YCuz8VPMy4doL1z0GS9ANmjQQOkmafb'

          results = drive_service.files().list(
              q=f"'{FOLDER_ID}' in parents",
              pageSize=100,
              fields="files(id, name, mimeType)"
          ).execute()

          files = results.get('files', [])
          os.makedirs('assets/images', exist_ok=True)

          for file in files:
              file_id = file['id']
              file_name = file['name']
              request = drive_service.files().get_media(fileId=file_id)
              fh = open(f'assets/images/{file_name}', 'wb')
              downloader = googleapiclient.http.MediaIoBaseDownload(fh, request)
              done = False
              while not done:
                  status, done = downloader.next_chunk()
              fh.close()
          EOF

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Build site with Jekyll
        run: bundle exec jekyll build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
